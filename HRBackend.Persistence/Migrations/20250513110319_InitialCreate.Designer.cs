// <auto-generated />
using System;
using HRBackend.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace HRBackend.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250513110319_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "name_socail_enum", new[] { "instagram", "linked_in", "face_book", "vk" });
            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "name_work_schedule_enum", new[] { "office", "hybrid", "home" });
            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "status_candidata_enum", new[] { "at_work", "offer", "accepted", "rejected", "under_review", "interview", "test_assignment" });
            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "type_event_enum", new[] { "candidat", "employes" });
            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "user_roles_enum", new[] { "admin", "hr" });
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Candidate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateUp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("NameWorkSchedule")
                        .HasColumnType("integer");

                    b.Property<int>("PersonalInfoId")
                        .HasColumnType("integer");

                    b.Property<string>("StatusCandidat")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("status");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("WorkingGroupId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_candidates");

                    b.HasIndex("Id");

                    b.HasIndex("PersonalInfoId");

                    b.HasIndex("WorkingGroupId");

                    b.ToTable("candidates", (string)null);
                });

            modelBuilder.Entity("Check", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatedId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateCheck")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp")
                        .HasColumnName("date_check")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Event")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("event");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id")
                        .HasName("pk_check");

                    b.HasIndex("UserId");

                    b.ToTable("check", (string)null);
                });

            modelBuilder.Entity("HRBackend.Domain.Entities.DictCountry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("pk_country");

                    b.ToTable("dict_country", (string)null);
                });

            modelBuilder.Entity("HRBackend.Domain.Entities.Employees", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateAdd")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp")
                        .HasColumnName("date_add")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("NameWorkSchedule")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("work_schedule");

                    b.Property<int>("PersonalInfoId")
                        .HasColumnType("integer");

                    b.HasKey("Id")
                        .HasName("PK_emploees");

                    b.HasIndex("Id");

                    b.HasIndex("PersonalInfoId");

                    b.ToTable("employees", (string)null);
                });

            modelBuilder.Entity("HRBackend.Domain.Entities.PersonalInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CountryId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateAdd")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp")
                        .HasColumnName("date_add")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(55)
                        .HasColumnType("varchar(55)")
                        .HasColumnName("email");

                    b.Property<string>("Middlename")
                        .IsRequired()
                        .HasMaxLength(55)
                        .HasColumnType("varchar(55)")
                        .HasColumnName("middlename");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(55)
                        .HasColumnType("varchar(55)")
                        .HasColumnName("name");

                    b.Property<string>("NameSocail")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("name_socail");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(55)
                        .HasColumnType("varchar(55)")
                        .HasColumnName("phone");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(55)
                        .HasColumnType("varchar(55)")
                        .HasColumnName("surname");

                    b.HasKey("Id")
                        .HasName("pk_personal_info");

                    b.HasIndex("CountryId");

                    b.HasIndex("Id");

                    b.ToTable("personal_info", (string)null);
                });

            modelBuilder.Entity("HRBackend.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(55)
                        .HasColumnType("varchar(55)")
                        .HasColumnName("login");

                    b.Property<string>("NameWorkSchedule")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("work_schedule");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("password");

                    b.Property<int>("PersonalInfoId")
                        .HasColumnType("integer");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("role");

                    b.Property<int>("WorkingGroupId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("pk_users");

                    b.HasIndex("Id");

                    b.HasIndex("PersonalInfoId");

                    b.HasIndex("WorkingGroupId");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("HRBackend.Domain.Entities.WorkingGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_working_groups");

                    b.HasIndex("Id");

                    b.ToTable("working_groups", (string)null);
                });

            modelBuilder.Entity("Candidate", b =>
                {
                    b.HasOne("HRBackend.Domain.Entities.PersonalInfo", "PersonalInfo")
                        .WithMany()
                        .HasForeignKey("PersonalInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HRBackend.Domain.Entities.WorkingGroup", "WorkingGroup")
                        .WithMany()
                        .HasForeignKey("WorkingGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PersonalInfo");

                    b.Navigation("WorkingGroup");
                });

            modelBuilder.Entity("Check", b =>
                {
                    b.HasOne("HRBackend.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("HRBackend.Domain.Entities.Employees", b =>
                {
                    b.HasOne("HRBackend.Domain.Entities.PersonalInfo", "PersonalInfo")
                        .WithMany()
                        .HasForeignKey("PersonalInfoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PersonalInfo");
                });

            modelBuilder.Entity("HRBackend.Domain.Entities.PersonalInfo", b =>
                {
                    b.HasOne("HRBackend.Domain.Entities.DictCountry", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("HRBackend.Domain.Entities.User", b =>
                {
                    b.HasOne("HRBackend.Domain.Entities.PersonalInfo", "PersonalInfo")
                        .WithMany()
                        .HasForeignKey("PersonalInfoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HRBackend.Domain.Entities.WorkingGroup", "WorkingGroup")
                        .WithMany()
                        .HasForeignKey("WorkingGroupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PersonalInfo");

                    b.Navigation("WorkingGroup");
                });
#pragma warning restore 612, 618
        }
    }
}
